<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.fkit.mapper.EmployeeMapper">	<!-- 用户自定义命名空间 -->
	
	<!-- sql标签的套路: 有条件(动态)地产生特定的sql语句 -->
	
	<!-- 简单的select语句 -->
	<select id="selectEmployeeWithId" parameterType="int" resultType="org.fkit.domain.Employee">
  		select * from tb_employee where id = #{id}
	</select>
	
	<!-- if clause -->
	<select id="selectEmployeeByIdLike" resultType="org.fkit.domain.Employee">
		select * from tb_employee where state = 'ACTIVE'
		<!-- Optional: 如果传进来的参数有id属性, 则加上id查询条件(谓之:'动态SQL') -->
		<if test="id != null">	<!-- 此句乃执行以下查询语句的条件:'id != null' -->
			and id = #{id}
		</if>
	</select>
	
	<!-- if clause: 两个可选条件，例如登录功能的登录名和密码查询 -->
	<select id="selectEmployeeByLoginLike" resultType="org.fkit.domain.Employee">
		select * from tb_employee where state = 'ACTIVE'
		<if test="loginname != null and password != null">
			and loginname = #{loginname} and password = #{password}
		</if>
	</select>

	<!-- choose（when、otherwise） -->
	<select id="selectEmployeeChoose" parameterType="hashmap" resultType="org.fkit.domain.Employee">
		select * from tb_employee where state = 'ACTIVE'
		<!-- 如果传入了id，就根据id查询，没有传入id就根据loginname和password查询，否则查询sex等于男的数据 -->
		<choose>
  			<when test="id != null">
  				and id = #{id}
			</when>
			<when test="loginname != null and password != null">
				and loginname = #{loginname} and password = #{password}
			</when>
			<otherwise>	<!-- 类似: if else -->
  				and sex = '男'
			</otherwise>
		</choose>
	</select>

	<!-- if clause: 必须有where子句的版本 -->
	<select id="findEmployeeLike" resultType="org.fkit.domain.Employee">
		select * from tb_employee where 
		<if test="state != null ">
			state = #{state}
		</if>
		<if test="id != null ">
			and id = #{id}
		</if>
		<if test="loginname != null and password != null">
			and loginname = #{loginname} and password = #{password}
		</if>
	</select>
  
	<!-- if clause: 可以没有where子句的版本 -->
	<select id="selectEmployeeLike" resultType="org.fkit.domain.Employee">
		select * from tb_employee
		<!-- where元素标签 -->
		<where>
			<if test="state != null ">
				state = #{state}
			</if>
			<if test="id != null ">
				and id = #{id}
			</if>
			<if test="loginname != null and password != null">
				and loginname = #{loginname} and password = #{password}
			</if>
		</where>
	</select>

	<!-- set -->
	<update id="updateEmployeeIfNecessary" parameterType="org.fkit.domain.Employee">
		update tb_employee
		<!-- 多个if条件的集合 -->
		<set>
			<if test="loginname != null">loginname=#{loginname},</if>
			<if test="password != null">password=#{password},</if>
			<if test="name != null">name=#{name},</if>
			<if test="sex != null">sex=#{sex},</if>
			<if test="age != null">age=#{age},</if>
			<if test="phone != null">phone=#{phone},</if>
			<if test="sal != null">sal=#{sal},</if>
			<if test="state != null">state=#{state}</if>
		</set>
		where id=#{id}
	</update>

	<!-- foreach -->
	<select id="selectEmployeeIn" resultType="org.fkit.domain.Employee">
		select * from tb_employee where ID in
		<!-- foreach标签 -->
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<!-- bind -->
	<select id="selectEmployeeLikeName"  resultType="org.fkit.domain.Employee">
		<!-- bind标签: like就是一种模糊匹配, 而"="号是严格相等 -->
		<bind name="pattern" value="'%' + _parameter.getName() + '%'" />
		select * from tb_employee where loginname like #{pattern}
	</select>

</mapper>
